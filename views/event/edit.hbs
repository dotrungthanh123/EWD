<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Event</title>

    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/jquery.validation/1.15.1/jquery.validate.min.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Kaushan+Script" rel="stylesheet">
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
        integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <link href="/assets/vendor/aos/aos.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/vendor/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/vendor/swiper/swiper-bundle.min.css" rel="stylesheet">

    <link href="/assets/img/favicon.png" rel="icon">
    <link href="/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <link href="/assets/css/style.css" rel="stylesheet">
</head>

<body>
    <header id="header" class="fixed-top"></header>

    <main id="main">
        <div class="container text-white">
            <h2 class="text-center mt-4">Edit {{ event.name }}</h2>
            <p class="text-center">Craft Your Event: Bringing Ideas to Life on Campus</p>
            <form action="" method="post" enctype="multipart/form-data">
                <div class="form-group row">
                    <label for="eventName" class="col-sm-2 col-form-label">Event Name:</label>
                    <div class="col-sm-10">
                        <input type="text" name="name" class="form-control " id="eventName" value="{{ event.name }}">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="description" class="col-sm-2 col-form-label">Description:</label>
                    <div class="col-sm-10">
                        <textarea class="form-control" id="description" rows="3" name="description">{{ event.description }}</textarea>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="firstClosureDate" class="col-sm-2 col-form-label">First Closure Date:</label>
                    <div class="col-sm-10">
                        <input type="date" name="firstClosureDate" class="form-control" id="firstClosureDate" value="{{formattedFirstClosureDate}}">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="finalClosureDate" class="col-sm-2 col-form-label">Final Closure Date:</label>
                    <div class="col-sm-10">
                        <input type="date" name="finalClosureDate" class="form-control" id="finalClosureDate" value="{{formattedFinalClosureDate}}">
                    </div>
                </div>
                <div class="form-group row">
                    <label for="attachImages" class="col-sm-2 col-form-label">Attach Images:</label>
                    <div class="col-sm-10">
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="attachFiles" multiple
                                onchange="previewImage()" name="image">
                            <label class="custom-file-label" for="attachImages">Choose file(s)</label>
                        </div>
                        <div id="file-preview" class="form-control mt-1 "> </div>

                    </div>
                </div>
                <div class="form-group row justify-content-end">
                    <div class="col-sm-10 mt-5">
                        <button type="submit" class="btn btn-primary" id="submitButton">Submit</button>
                        <button type="reset" class="btn btn-secondary ml-2">Reset</button>
                    </div>
                </div>
            </form>
        </div>
    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
    <footer id="footer"></footer>
    <!-- End Footer -->
    <script src="/assets/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="/assets/vendor/aos/aos.js"></script>
    <script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/vendor/swiper/swiper-bundle.min.js"></script>
    <script src="/assets/vendor/php-email-form/validate.js"></script>
    <script src="/assets/js/main.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</body>
<Script>
    const submitButton = document.getElementById('submitButton');
    const today = new Date().toISOString().split('T')[0];
    const firstClosureDateInput = document.getElementById('firstClosureDate');
    const finalClosureDateInput = document.getElementById('finalClosureDate');
    firstClosureDateInput.min = today;

    resetButton.addEventListener('click', function () {
        const imagePreview = document.getElementById('file-preview');
        imagePreview.innerHTML = '';
    });

    submitButton.addEventListener('click', function (event) {
        const firstClosureDate = firstClosureDateInput.value;
        const finalClosureDate = finalClosureDateInput.value;
        // Check if first closure date is empty
        if (!firstClosureDate) {
            alert('Please enter a First Closure Date');
            event.preventDefault(); // Prevent form submission
            return;
        }

        // Check if final closure date is empty
        if (!finalClosureDate) {
            alert('Please enter a Final Closure Date');
            event.preventDefault(); // Prevent form submission
            return;
        }

        // Check if first closure date is before final closure date
        if (firstClosureDate > finalClosureDate) {
            alert('First Closure Date must be before Final Closure Date');
            event.preventDefault(); // Prevent form submission
            return;
        }
    });

    $(function () {
        $("#header").load("/sharedhtmls/header.hbs", function () {
            $('.mobile-nav-toggle').click(function () {
                $('#navbar').toggleClass('navbar-mobile');

            });

            $('.dropdown > a').click(function (e) {
                e.preventDefault();
                $(this).next('ul').slideToggle();
            });
        });
        $("#footer").load("/sharedhtmls/footer.hbs");
    });

    function previewImage() {
        const fileInput = document.getElementById('attachImages');
        const imagePreview = document.getElementById('file-preview');

        const files = fileInput.files;
        if (files.length > 0) {
            const reader = new FileReader();
            reader.readAsDataURL(files[0]);
            reader.onload = function (e) {
                const img = new Image();
                img.src = e.target.result;
                img.onload = function () {

                    const MAX_WIDTH = 200;
                    const MAX_HEIGHT = 150;

                    let width = img.width;
                    let height = img.height;

                    if (width > MAX_WIDTH) {
                        height *= MAX_WIDTH / width;
                        width = MAX_WIDTH;
                    }

                    if (height > MAX_HEIGHT) {
                        width *= MAX_HEIGHT / height;
                        height = MAX_HEIGHT;
                    }

                    img.width = width;
                    img.height = height;

                    // Create a container element for the image and its name
                    const previewContainer = document.createElement('div');
                    previewContainer.classList.add('preview-item');  // Consider adding CSS styling

                    // Append the image to the container
                    previewContainer.appendChild(img);

                    // Create a span element for the image name (optional)
                    const filenameSpan = document.createElement('span');
                    filenameSpan.textContent = files[0].name;  // Set the filename

                    // Add spacing using CSS (recommended)
                    filenameSpan.style.marginLeft = '5px';
                    previewContainer.style.display = 'flex';
                    previewContainer.style.alignItems = 'center';  // Vertically align image and name
                    previewContainer.style.marginBottom = '10px';  // Add some space below the container (optional)
                    // Append the filename span to the container (optional)
                    previewContainer.appendChild(filenameSpan);

                    imagePreview.appendChild(previewContainer);
                };
            };
        }
    }

</Script>
<style>
    body {
        padding-top: 10rem;
        background-color: hsl(250, 25%, 19%)
    }

    .custom-file {
        background-color: hsl(235, 22%, 30%);
    }

    #file-preview {
        height: 200px;
        overflow-y: scroll;
        background-color: hsl(235, 22%, 30%);
    }

    .form-control {
        background-color: hsl(235, 22%, 30%);
        border: 0cap;
        color: white;
    }

    .form-control:focus {
        color: rgb(0, 0, 0);
    }
</style>

</html>